@charset "UTF-8";
@import "_pseudo";
@import "_mixin";

@font-face {
  font-family: $icon;
  src: url("ScheduleIcon.woff") format("woff");
}
* {
	box-sizing: border-box;
	&::before, &::after {
		box-sizing: border-box;
	}
}
body {
  margin: 0;
  font-size: divceil(32, 750, "vw");
  font-family: $font, sans-serif;
  color: $black1;
  @include mq() {
		font-size: 20px;
  }
}
input, textarea {
	background: #fff;
	border: 1px solid map-get($btn-nml, "font");
	border-radius: 2px;
	width: 100%;
	padding: divceil(4, 16, "em") divceil(8, 16, "em");
  line-height: 1;
  font: inherit;
	cursor: pointer;
	&:focus {
		border: 1px solid map-get($btn-nml, "side");
		outline: none;
		box-shadow: 0 0 0 1px map-get($btn-nml, "side");
	}
}
button {
  position: relative;
	background: transparent;
  border: none;
	padding: 0;
	letter-spacing: 0.07em;
  line-height: 1;
  font-size: 16px;
	font-weight: bold;
	font-family: $btn;
	font-feature-settings: "palt";
	appearance: unset;
	-webkit-tap-highlight-color: transparent;
  cursor: pointer;
	&:focus {
		outline: none;
	}
	&.def {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid;
    border-radius: 4px;
    &::before {
      font-family: $icon;
    }
		.isMD &:active > span, .isTD &:active > span {
			color: #fff;
		}
		&.isNoActive {
			pointer-events: none;
		}
	}
  &.icn {
    width: divceil(32, 16, "em");
    height: divceil(32, 16, "em");
  }
  &.wrd {
    width: divceil(48, 16, "em");
    height: divceil(32, 16, "em");
    &::before {
      margin-right: 0.5em;
    }
  }
  &.txt {
    width: divceil(160, 16, "em");
    height: divceil(32, 16, "em");
    &::before {
      margin-right: 0.5em;
    }
  }
	&.ccl {
		display: flex;
		justify-content: center;
		align-items: center;
		background: map-get($btn-nml, "bgBase");
		border-radius: 50%;
		width: divceil(28, 16, "em");
		height: divceil(28, 16, "em");
		font-family: $icon;
		.isMD &:hover {
			background: map-get($btn-nml, "side");
		}
		.isMD &:active, .isTD &:active {
			background: map-get($btn-nml, "font");
			color: #fff;
		}
		&.isNoActive {
			color: map-get($btn-nml, "bgActive");
			pointer-events: none;
		}
  }
  &.nml {
    @include btnColor($btn-nml);
  }
  &.prj {
    @include btnColor($btn-prj);
    &::before {
      content: $project;
    }
  }
  &.tsk {
    @include btnColor($btn-tsk);
    &::before {
      content: $task;
    }
  }
  &.lbl::before {
    content: $label;
  }
  &.mnl::before {
    content: $menu;
  }
  &.cng::before {
    content: $change;
  }
  &.edt::before {
    content: $edit;
  }
  &.sch::before {
    content: $search;
  }
  &.prr::before {
    content: $priority;
  }
  &.dtp::before {
    content: $datepicker;
  }
  &.lnk::before {
    content: $link;
  }
  &.mmb::before {
    content: $member;
  }
  &.rem::before {
    content: $remove;
  }
  &.cls::before {
    content: $clear;
  }
  &.pls::before {
    content: $plus;
  }
  &.mns::before {
    content: $minus;
  }
}

a.listItem {
	display: flex;
	justify-content: space-between;
	align-items: center;
	position: relative;
	width: 100%;
	height: 100%;
	letter-spacing: 0.03em;
	cursor: pointer;
	&::before {
		display: block;
		margin: 0 divceil(8, 16, "em") 0 0;
		font-family: $icon;
	}
	&::after {
		display: block;
		margin: 0 0 0 auto;
		font-family: $icon;
	}
	&.trs {
		&::after {
			content: $right;
		}
	}
	&.acc {
		&::after {
			content: $down;
		}
		&.isOpen::after {
			content: $up;
		}
	}
	> span {
		display: block;
		line-height: 1;
		pointer-events: none;
	}
}
a.cardItem {
	display: block;
	position: relative;
	color: map-get($btn-nml, "font");
	cursor: pointer;
	&::before {
		content: "";
		position: absolute;
		background: $gray6;
		border: 2px solid;
		border-radius: divceil(4, 16, "em");
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		pointer-events: none;
	}
	.isMD &.isHover::before {
		background: map-get($btn-nml, "side");
	}
	.isMD &, .isTD & {
		&.isActive {
			color: #fff;
			&::before {
				background: map-get($btn-nml, "font");
				color: map-get($btn-nml, "font");
			}
		}
	}
	> * {
		position: relative;
	}
}
a.sch {
	&.listItem::before {
		content: $search;
	}
}
a.edt {
	&.listItem::before {
		content: $edit;
	}
}
a.prj {
	&.listItem::before {
		content: $project;
		color: map-get($btn-prj, "side");
	}
}
a.tsk {
	&.listItem::before {
		content: $task;
		color: map-get($btn-tsk, "side");
	}
}

// wrapper
#App {
	position: fixed;
	width: 100%;
	height: 100%;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}